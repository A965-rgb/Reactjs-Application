[{"C:\\Users\\pratik\\counter-app\\src\\App.js":"1","C:\\Users\\pratik\\counter-app\\src\\index.js":"2","C:\\Users\\pratik\\counter-app\\src\\reportWebVitals.js":"3","C:\\Users\\pratik\\counter-app\\src\\components\\counter.jsx":"4"},{"size":528,"mtime":1610636497085,"results":"5","hashOfConfig":"6"},{"size":591,"mtime":1611235258136,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610636497085,"results":"8","hashOfConfig":"6"},{"size":806,"mtime":1612876119948,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1uc35bj",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"C:\\Users\\pratik\\counter-app\\src\\App.js",[],"C:\\Users\\pratik\\counter-app\\src\\index.js",["21"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counter from './components/counter';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Counter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["22","23"],"C:\\Users\\pratik\\counter-app\\src\\reportWebVitals.js",[],"C:\\Users\\pratik\\counter-app\\src\\components\\counter.jsx",["24"],"import React, { Component } from 'react';\r\nclass  Counter extends Component {\r\n    state = {\r\n        count:1,\r\n        \r\n    };\r\n    handleIncrement = product =>{\r\n        console.log(product);\r\n       this.setState({count: this.state.count +1});\r\n    };\r\n\r\n    \r\n    \r\n render() {\r\n    return(\r\n    <div>    \r\n    <span className={this.grtBadgeClasses()}>{this.formatCount()}</span> )\r\n    <button \r\n      onClick={() =>this.handleIncrement(product)} \r\n      className=\"btn btn-secondary btn-sm\"\r\n      >\r\n          Increment\r\n          </button>   \r\n    </div>\r\n       );\r\n    } \r\n   grtBadgeClasses(){\r\n       let classes = \"badge m-2 badge-\";\r\n       classes += this.state.count === 0 ? \"warning\" : \"primary\";\r\n       return classes;\r\n   }\r\n   formatCount(){ \r\n\r\n   }\r\n\r\n}\r\n \r\nexport default Counter ;",{"ruleId":"25","severity":1,"message":"26","line":4,"column":8,"nodeType":"27","messageId":"28","endLine":4,"endColumn":11},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":2,"message":"34","line":19,"column":42,"nodeType":"27","messageId":"35","endLine":19,"endColumn":49},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-undef","'product' is not defined.","undef","no-global-assign","no-unsafe-negation"]